// Code generated by "stringer -type=InstructionType"; DO NOT EDIT.

package ir

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Undefined-0]
	_ = x[Add-1]
	_ = x[Sub-2]
	_ = x[Mul-3]
	_ = x[Equals-4]
	_ = x[NotEquals-5]
	_ = x[Move-6]
	_ = x[IfTrueGoto-7]
	_ = x[Int-8]
	_ = x[Label-9]
	_ = x[Decl-10]
	_ = x[Function-11]
	_ = x[Arg-12]
	_ = x[Call-13]
}

const _InstructionType_name = "UndefinedAddSubMulEqualsNotEqualsMoveIfTrueGotoIntLabelDeclFunctionArgCall"

var _InstructionType_index = [...]uint8{0, 9, 12, 15, 18, 24, 33, 37, 47, 50, 55, 59, 67, 70, 74}

func (i InstructionKind) String() string {
	if i < 0 || i >= InstructionKind(len(_InstructionType_index)-1) {
		return "InstructionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InstructionType_name[_InstructionType_index[i]:_InstructionType_index[i+1]]
}
