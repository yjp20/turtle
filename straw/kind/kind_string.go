// Code generated by "stringer -type=Kind"; DO NOT EDIT.

package kind

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unresolved-0]
	_ = x[None-1]
	_ = x[Any-2]
	_ = x[Bool-3]
	_ = x[IntConstant-4]
	_ = x[I8-5]
	_ = x[I16-6]
	_ = x[I32-7]
	_ = x[I64-8]
	_ = x[U8-9]
	_ = x[U16-10]
	_ = x[U32-11]
	_ = x[U64-12]
	_ = x[F32-13]
	_ = x[F64-14]
	_ = x[StringConstant-15]
	_ = x[String-16]
	_ = x[Function-17]
	_ = x[BuiltinFunction-18]
	_ = x[Array-19]
	_ = x[Slice-20]
	_ = x[Struct-21]
	_ = x[Interface-22]
	_ = x[Tuple-23]
	_ = x[Range-24]
	_ = x[Type-25]
	_ = x[Factory-26]
}

const _Kind_name = "UnresolvedNoneAnyBoolIntConstantI8I16I32I64U8U16U32U64F32F64StringConstantStringFunctionBuiltinFunctionArraySliceStructInterfaceTupleRangeTypeFactory"

var _Kind_index = [...]uint8{0, 10, 14, 17, 21, 32, 34, 37, 40, 43, 45, 48, 51, 54, 57, 60, 74, 80, 88, 103, 108, 113, 119, 128, 133, 138, 142, 149}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
