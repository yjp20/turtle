// Code generated by "stringer -type=Kind"; DO NOT EDIT.

package kind

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unresolved-0]
	_ = x[None-1]
	_ = x[Null-2]
	_ = x[Default-3]
	_ = x[Any-4]
	_ = x[Frame-5]
	_ = x[Bool-6]
	_ = x[IntConstant-7]
	_ = x[I8-8]
	_ = x[I16-9]
	_ = x[I32-10]
	_ = x[I64-11]
	_ = x[U8-12]
	_ = x[U16-13]
	_ = x[U32-14]
	_ = x[U64-15]
	_ = x[F32-16]
	_ = x[F64-17]
	_ = x[StringConstant-18]
	_ = x[String-19]
	_ = x[Function-20]
	_ = x[BuiltinFunction-21]
	_ = x[Array-22]
	_ = x[Slice-23]
	_ = x[Struct-24]
	_ = x[Interface-25]
	_ = x[Tuple-26]
	_ = x[Range-27]
	_ = x[Type-28]
	_ = x[Factory-29]
}

const _Kind_name = "UnresolvedNoneNullDefaultAnyFrameBoolIntConstantI8I16I32I64U8U16U32U64F32F64StringConstantStringFunctionBuiltinFunctionArraySliceStructInterfaceTupleRangeTypeFactory"

var _Kind_index = [...]uint8{0, 10, 14, 18, 25, 28, 33, 37, 48, 50, 53, 56, 59, 61, 64, 67, 70, 73, 76, 90, 96, 104, 119, 124, 129, 135, 144, 149, 154, 158, 165}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
