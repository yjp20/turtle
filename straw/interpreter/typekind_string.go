// Code generated by "stringer -type=TypeKind"; DO NOT EDIT.

package interpreter

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeNull-0]
	_ = x[TypeFrame-1]
	_ = x[TypeDefault-2]
	_ = x[TypeAny-3]
	_ = x[TypeI32-4]
	_ = x[TypeI64-5]
	_ = x[TypeString-6]
	_ = x[TypeBool-7]
	_ = x[TypeF64-8]
	_ = x[TypeFunction-9]
	_ = x[TypeBuiltinFunction-10]
	_ = x[TypeArray-11]
	_ = x[TypeSlice-12]
	_ = x[TypeStruct-13]
	_ = x[TypeInterface-14]
	_ = x[TypeTuple-15]
	_ = x[TypeRange-16]
	_ = x[TypeType-17]
	_ = x[TypeFactory-18]
}

const _TypeKind_name = "TypeNullTypeFrameTypeDefaultTypeAnyTypeI32TypeI64TypeStringTypeBoolTypeF64TypeFunctionTypeBuiltinFunctionTypeArrayTypeSliceTypeStructTypeInterfaceTypeTupleTypeRangeTypeTypeTypeFactory"

var _TypeKind_index = [...]uint8{0, 8, 17, 28, 35, 42, 49, 59, 67, 74, 86, 105, 114, 123, 133, 146, 155, 164, 172, 183}

func (i TypeKind) String() string {
	if i < 0 || i >= TypeKind(len(_TypeKind_index)-1) {
		return "TypeKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TypeKind_name[_TypeKind_index[i]:_TypeKind_index[i+1]]
}
